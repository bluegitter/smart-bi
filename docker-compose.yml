services:
  # MongoDB Database (using different port to avoid conflict)
  mongodb:
    image: mongo:7.0
    container_name: smart-bi-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: smartbi
    ports:
      - "27018:27017"  # Changed from 27017 to 27018 to avoid conflict
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-db.js:/docker-entrypoint-initdb.d/init-db.js:ro
    networks:
      - smart-bi-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/smartbi --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Redis Cache (optional for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: smart-bi-redis
    restart: unless-stopped
    ports:
      - "6380:6379"  # Using different port
    volumes:
      - redis_data:/data
    networks:
      - smart-bi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Next.js Application 
  smart-bi-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: smart-bi-app
    restart: unless-stopped
    environment:
      # Database connections
      MONGODB_URI: mongodb://admin:adminpassword@mongodb:27017/smartbi?authSource=admin
      REDIS_URL: redis://redis:6379
      
      # Application settings
      NODE_ENV: production
      PORT: 3002
      NEXT_TELEMETRY_DISABLED: 1
      
      # Security
      JWT_SECRET: SmartBI_JWT_Secret_2024_Production_Key
      
      # Optional: MySQL connection if needed
      MYSQL_HOST: host.docker.internal
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: smart_bi_test
      MYSQL_PORT: 3306
      
      # OpenAI settings (if needed)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_API_BASE_URL: ${OPENAI_API_BASE_URL:-}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-3.5-turbo}
      
    ports:
      - "3002:3002"  # Changed from 3000 to 3002 to avoid conflict  
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - smart-bi-network
    volumes:
      # Mount uploads directory for file storage
      - uploads_data:/app/uploads
      # Mount logs directory
      - logs_data:/app/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.smart-bi.rule=Host(`smart-bi.local`)"
      - "traefik.http.services.smart-bi.loadbalancer.server.port=3002"

  # MongoDB Express for database management (optional)
  mongo-express:
    image: mongo-express:1.0.2
    container_name: smart-bi-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: adminpassword
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: adminpassword
      ME_CONFIG_SITE_BASEURL: /mongo-express/
    ports:
      - "8082:8081"  # Changed from 8081 to 8082
    depends_on:
      mongodb:
        condition: service_healthy  
    networks:
      - smart-bi-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: smart-bi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - logs_data:/var/log/nginx
    depends_on:
      - smart-bi-app
    networks:
      - smart-bi-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local  
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  smart-bi-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16